name: "Image cache set-up"

description: "Configures the conan cache"

inputs:
  faasm-version:
    description: "Faasm version"
    required: true

defaults:
  run:
    shell: bash

runs:
  using: "composite"
  steps:
    # This action is used to only pull all the images in a Faasm deployment
    # once per GHA workflow. To do so, it is first called on its own, and
    # follows (potentially) the write path where images are pulled and
    # saved to a temporary directory (using docker save). Then, it is called
    # in the "read" path, where images are loaded from the temporary directory.
    - name: "Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3
        #       - name: "Log in to DockerHub"
        #         uses: docker/login-action@v3
        #         with:
        #           registry: faasm.azurecr.io
        #           username: ${{ secrets.ACR_SERVICE_PRINCIPAL_ID }}
        #           password: ${{ secrets.ACR_SERVICE_PRINCIPAL_PASSWORD }}
    - uses: actions/cache@v4
      id: docker-image-cache
      with:
        path: /tmp/faasm-docker-images
        key: docker-image-cache-${{ inputs.faasm-version }}

    # ----- Write Path -----
    - name: "Pull all docker images"
      if: steps.docker-image-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        ./bin/inv_wrapper.sh docker.pull -c redis -c minio -c upload -c worker -c cli
    # Save all docker images to files. Annoyingly, I have not found the way
    # to do this in a loop in GHA
    - name: "Save them to a tar gzip file"
      if: steps.docker-image-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p /tmp/faasm-docker-images
        cd /tmp/faasm-docker-images/
        # docker save faasm.azurecr.io/redis:${{ inputs.faasm-version }} | gzip /tmp/faasm-docker-images/redis_${{ inputs.faasm-version }}.tar
        for image in redis minio upload worker cli
        do
          docker save faasm.azurecr.io/${image}:${{ inputs.faasm-version }} | gzip > /tmp/faasm-docker-images/${image}_${{ inputs.faasm-version }}.tar
        done
        ls -lart /tmp/faasm-docker-images/

    # ----- Read Path -----
    - name: "Load all images from the temporary directory"
      if: steps.docker-image-cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        for image in redis minio upload worker cli
        do
          docker load --input /tmp/faasm-docker-images/${image}_${{ inputs.faasm-version }}.tar.gz
        done
